

C - datatypes
---
int a = 10;
float b = 45.34;
char c= 'z';
double
long
short


python - objects
----------------
Everything is python is treated as object.
Every object contains methods.

number
string
list
tuple
dictionary
set


number
------
number can integer or decimal or octal or hexa.

aval = 10
bval = 34.54

string ( immutable)
------
string is defined in single or double or triple quotes.

aname = 'python programming'
bname = "java programming"
cname = """spark programming"""
dname = '''unix shell scripting'''

list ( array in C)
-----
list contains set of elements.
Elements can be numbers or strings or any combination.
list is defined in [].

alist = [10,20,30,40]
blist = ["python","java","oracle"]
clist = [[10,20][30,40],{"chap1":10,"chap2":20}]

tuple ( immutable or unchangeable or uneditable)
------
tuple contains set of elements.
Elements can be numbers or strings or any combination.
tuple is defined in ().
*** Elements inside tuple cannot be modified directly ***

atup = (30,40,50,40)
btup = ("python","java","oracle")

# list of lists
empdb = [["ram",'1-1-1',"UK"],["rita","'2-2-2","US"]]

# list of tuples
empdb = [("ram",'1-1-1',"UK"),("rita","'2-2-2","US")]

dictionary ( json  hash  hashmap  items associatearray  objects )
----------
dictionary contain key-value pairs
In dictionary , keys are unique and key can be number or string to identify the value.
value can be number or string or list or tuple or dictionary or complex structure.

syntax:   object = { key:value , key:value , key:value }
example:   book  = {"chap1":10 ,"chap2":20 ,"chap3":30 ,"chap1":100}

val = 10
val = 100

Index
------
chap1.   10
chap2.   20
chap3.   30 
chap4.   40
chap5.   40



set ( venn diagrams)
----
set is UNORDERED collection of UNIQUE elements of SAME type.

aset = {10,10,20,30,30,30}


conditional statements
--------------------
simple if 
if-else 
if-elif-elif-elif-elif-elif-else


control statements 
-----------------
for loop
while loop

jump statements
---------------
break
continue



level1
level1
level1
level1
if cond:
    level2
    level2
    level2


operators
-----------

arithmetic operators :   +  - * % /

relational operators :   < <= > >=  ==  !=

logical opeartors :  and   or  not.   

assignment operators : ( ++ and -- are NOT allowed in python)

val = 10
val +=1  (or) val=val + 1 

special operators 
-----------------
in 
as
+
*

**


There are 2 ways of commenting
--------------------------------

# this is single line commenting


"""
this is
multiline
comment
"""


builtin functions
--------------------
print()
range()
list()
id()
type()
isinstance()
sum()
max()
min()
help()
dir()
zip()

tuple()
str()
int()
float()


How to display all the list of builtin functions and exceptions ?

print(dir(__builtins__))


file handling
--------------

txt
csv
json
html
css
png 
jpg 
xml
xlsx
jpeg
mp3
mp4
pdf
log 
conf
mkv
mvi 
wav
dat
zip
rar
7z
tar 
.tar.gz
mov
docx
pptx


flat files :   txt   log   csv   dat   json xml 

third party files : pdf pptx  xlsx mp3 mp4 zip rar jpg


working with flat files 
-------------------------
read mode ( r )
write mode ( w )
append mode ( a)


opening the file 
----------------

syntax:    fobj = open(filename,mode)

read opeartion :  fobj = open("clients.txt","r")
write opeartion :  fobj = open("clients.txt","w")
append opeartion :  fobj = open("clients.txt","a")


closing the file
---------------
fobj.close()









working with third party files
